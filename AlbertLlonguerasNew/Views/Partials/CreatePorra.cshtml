@using AlbertLlonguerasNew.Controllers
@using umbraco.cms.businesslogic.web
@using umbraco.BusinessLogic;
@using Member = umbraco.cms.businesslogic.member.Member
@model AlbertLlonguerasNew.Models.NewPorraModel

@{
    if (TempData["PorraSuccess"] == null || !Boolean.Parse(TempData["PorraSuccess"].ToString()))
    {
        var ddl = Library.Businness.TeamsManager.LoadTeams();
        using (Html.BeginUmbracoForm<NewPorraController>("CreatePorra"))
        {
            <div class="input-group">
                <span class="input-group-addon inputsWidth">Equip local</span>
                @Html.DropDownListFor(x => x.LocalTeam, new SelectList(ddl, "Team", "Team"), new {@class = "form-control"})
            </div>
            <div class="input-group">
                <span class="input-group-addon inputsWidth">Golejadors</span>
                @Html.TextBox("LocalScore", Model.LocalScore, new {@class = "form-control", @placeholder = "Golejadors equip local"})
            </div>
            <p class="helpMessage">Els golejadors han d'estar separats per comes. Es deixa en blanc quan l'equip no marca gols</p>
            @Html.Raw("</br>")
            <div class="input-group">
                <span class="input-group-addon inputsWidth">Equip visitant</span>
                @Html.DropDownListFor(x => x.VisitorTeam, new SelectList(ddl, "Team", "Team"), new {@class = "form-control"})
            </div>
            <div class="input-group">
                <span class="input-group-addon inputsWidth">Golejadors</span>
                @Html.TextBox("VisitorScore", Model.VisitorScore, new {@class = "form-control", @placeholder = "Golejadors equip visitant"})
            </div>
            <p class="helpMessage">Els golejadors han d'estar separats per comes. Es deixa en blanc quan l'equip no marca gols</p>
            TempData["Player"] = Model.Player;
            TempData["PorraNode"] = Model.PorraNode;
            TempData["MatchIdentifier"] = Model.MatchIdentifier;
            <div class="form-group">
                <input type="submit" class="btn btn-default" value="Nova porra" />
            </div>
        }
    }
}
@{
    if (TempData["PorraSuccess"] != null && Boolean.Parse(TempData["PorraSuccess"].ToString()))
    {
        if (TempData["ErrorLog"] != null)
        {
            <p class="text-warning">@TempData["ErrorLog"]</p>
        }
        else
        {
            <p>@TempData["LocalTeam"]</p>
            <p>@TempData["LocalScore"]</p>
            <p>@TempData["VisitorTeam"]</p>
            <p>@TempData["VisitorScore"]</p>
            DocumentType dt = DocumentType.GetByAlias("Porra");
            var currentUser = Member.GetCurrentMember();
            User author = new User(0);
            Document doc = Document.MakeNew(@Model.MatchIdentifier, dt, currentUser.User, Model.PorraNode.Id);
            doc.getProperty("porraIdentifier").Value = Model.MatchIdentifier;
            doc.getProperty("localTeam").Value = TempData["LocalTeam"];
            doc.getProperty("localScore").Value = TempData["LocalScore"];
            doc.getProperty("visitorTeam").Value = TempData["VisitorTeam"];
            doc.getProperty("visitorScore").Value = TempData["VisitorScore"];
            doc.Publish(author);
        }
    }
}
