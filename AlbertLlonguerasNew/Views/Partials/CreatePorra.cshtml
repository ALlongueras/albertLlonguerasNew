@using System.Linq.Expressions
@using AlbertLlonguerasNew.Controllers
@using AlbertLlonguerasNew.Models
@using Library.Businness
@using Library.Helpers
@using umbraco.cms.businesslogic.web
@using umbraco.BusinessLogic;
@using Member = umbraco.cms.businesslogic.member.Member
@model AlbertLlonguerasNew.Models.NewPorraModel

@{
    if (TempData["PorraSuccess"] == null || !Boolean.Parse(TempData["PorraSuccess"].ToString()))
    {
        var ddl = Library.Businness.TeamsManager.LoadTeams();
        using (Html.BeginUmbracoForm<NewPorraController>("CreatePorra"))
        {
    @Html.Label("Insert local team")
    @Html.DropDownListFor(x => x.LocalTeam, new SelectList(ddl, "Team", "Team"))
    @Html.Raw("</br>")
    @Html.Label("Insert local scores")
    @Html.TextBoxFor(x => x.LocalScore) 
    @Html.Raw("</br>")
    @Html.Label("Insert visitor team")
    @Html.DropDownListFor(x => x.VisitorTeam, new SelectList(ddl, "Team", "Team"))
    @Html.Raw("</br>")
    @Html.Label("Insert visitor scores")
    @Html.TextBoxFor(x => x.VisitorScore)
            TempData["Player"] = Model.Player;
            TempData["PorraNode"] = Model.PorraNode;
            TempData["MatchIdentifier"] = Model.MatchIdentifier;
    <input type="submit" />
        }
    }
}
@{
    if (TempData["PorraSuccess"] != null && Boolean.Parse(TempData["PorraSuccess"].ToString()))
    {
    <p>@TempData["LocalTeam"]</p>
    <p>@TempData["LocalScore"]</p>
    <p>@TempData["VisitorTeam"]</p>
    <p>@TempData["VisitorScore"]</p>
        //lacks create jugador's node before create a new porra associated to the player.
        if (TempData["ErrorLog"] != null)
        {
    <p>@TempData["ErrorLog"]</p>
        }
        else
        {
            DocumentType dt = DocumentType.GetByAlias("Porra");
            var currentUser = Member.GetCurrentMember();
            User author = new User(0);
            //var nodeName = string.Format("{0}-{1}-{2}", Member.GetCurrentMember().Email, Model.MatchIdentifier, DateTime.Now);
            Document doc = Document.MakeNew(@Model.MatchIdentifier, dt, currentUser.User, Model.PorraNode.Id);
            //if (TempData["PorraSuccess"] != null && Boolean.Parse(TempData["PorraSuccess"].ToString()))
            //{
                doc.getProperty("porraIdentifier").Value = Model.MatchIdentifier;
            //}
            doc.getProperty("localTeam").Value = TempData["LocalTeam"];
            doc.getProperty("localScore").Value = TempData["LocalScore"];
            doc.getProperty("visitorTeam").Value = TempData["VisitorTeam"];
            doc.getProperty("visitorScore").Value = TempData["VisitorScore"];
            doc.Publish(author);

            @*if (TempData["PorraSuccess"] == null)
            {
                var informationList = PorraManager.GetInformationOfPlayers(Utils.GetRootNode(Model.PorraNode));
                foreach (var playerInformation in informationList)
                {
  <p>Global Puntuation of @playerInformation.PlayerName is @playerInformation.Information.OldInformation.GlobalPuntuation</p>
                }
            }*@
        }
    }
}
