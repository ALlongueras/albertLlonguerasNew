@using AlbertLlonguerasNew.Controllers
@using AlbertLlonguerasNew.Models
@using Library.Businness
@using Library.Helpers
@using Library.Models
@using Lucene.Net.Documents
@using umbraco.BusinessLogic
@using Document = umbraco.cms.businesslogic.web.Document
@model NewResultModel
<p>Month: @Utils.GetCurrentMonthOfPrevia(Model.PorraNode)</p>

@{
    if (TempData["ResultSuccess"] == null || !Boolean.Parse(TempData["ResultSuccess"].ToString()))
    {
        var ddl = TeamsManager.LoadTeams();
        using (Html.BeginUmbracoForm<NewResultController>("CreateResult"))
        {
    @Html.Label("Insert local team")
    @Html.DropDownListFor(x => x.LocalTeam, new SelectList(ddl, "Team", "Team"))
    @Html.Raw("</br>")
    @Html.Label("Insert local scores")
    @Html.TextBoxFor(x => x.LocalScore) 
    @Html.Raw("</br>")
    @Html.Label("Insert visitor team")
    @Html.DropDownListFor(x => x.VisitorTeam, new SelectList(ddl, "Team", "Team"))
    @Html.Raw("</br>")
    @Html.Label("Insert visitor scores")
    @Html.TextBoxFor(x => x.VisitorScore)
    @Html.Raw("</br>")
    @Html.Label("Final of month?")
    @Html.CheckBoxFor(x => x.FinalOfMonth)
    @Html.Label("Not apply DRS?")
    @Html.CheckBoxFor(x => x.NotDRS)
            TempData["Nodes"] = Model.PlayerNodes;
            TempData["Player"] = Model.Player;
            TempData["PorraNode"] = Model.PorraNode;
            TempData["MatchIdentifier"] = Model.MatchIdentifier;
    @Html.Raw("</br>")
    @Html.Raw("</br>")
    <input type="submit" />
        }
    }
}
@{
    if (TempData["ResultSuccess"] != null && Boolean.Parse(TempData["ResultSuccess"].ToString()))
    {
        var result = new MatchResultModel
        {
            LocalTeam = TempData["LocalTeam"] != null ? TempData["LocalTeam"].ToString() : string.Empty,
            LocalScore = TempData["LocalScore"] != null ? TempData["LocalScore"].ToString() : string.Empty,
            VisitorTeam = TempData["VisitorTeam"] != null ? TempData["VisitorTeam"].ToString() : string.Empty,
            VisitorScore = TempData["VisitorScore"] != null ? TempData["VisitorScore"].ToString() : string.Empty,
            FinalOfMonth = TempData["FinalOfMonth"] != null && bool.Parse(TempData["FinalOfMonth"].ToString()),
            CurrentMonth = Utils.GetCurrentMonthOfPrevia(Model.PorraNode),
            NotDRS = TempData["NotDRS"] != null && bool.Parse(TempData["NotDRS"].ToString()),
        };

        <p>@result.LocalTeam</p>
        <p>@result.LocalScore</p>
        <p>@result.VisitorTeam</p>
        <p>@result.VisitorScore</p>

        //lacks create jugador's node before create a new porra associated to the player.
        if (TempData["ErrorLog"] != null)
        {
            <p>@TempData["ErrorLog"]</p>
        }
        else
        {
            User author = new User(0);
            Document doc = new Document(Model.PorraNode.Id);
            doc.getProperty("localTeam").Value = TempData["LocalTeam"];
            doc.getProperty("localScore").Value = TempData["LocalScore"];
            doc.getProperty("visitorTeam").Value = TempData["VisitorTeam"];
            doc.getProperty("visitorScore").Value = TempData["VisitorScore"];
            doc.Publish(author);


            IPorraManager porraManager = new PorraManager();
            <p>@Model.PlayerNodes and @Model.MatchIdentifier and @result.LocalTeam</p>
            var informationList = porraManager.GetWholePuntuationOfPlayers(Model.PlayerNodes.ToList(), Model.MatchIdentifier, result);
            foreach (var playerInformation in informationList)
            {
                <p>
                    Global Puntuation of @playerInformation.PlayerName is @playerInformation.Information.NewInformation.GlobalPuntuation
                    @Environment.NewLine and the position is: @playerInformation.Information.NewInformation.HasDRS
                    @Environment.NewLine and the last puntuation is: @playerInformation.Information.NewInformation.LastScore
                </p>
            }
            foreach (var playerNode in Model.PlayerNodes)
            {
                var playerInformation =
                    informationList.FirstOrDefault(name => name.PlayerName == playerNode.GetPropertyValue("name").ToString());
                var user = new User(0);
                var node = new Document(playerNode.Id);
                node.getProperty("globalPuntuation").Value = string.Format("{0}", playerInformation.Information.NewInformation.GlobalPuntuation);
                node.getProperty("lastScore").Value = string.Format("{0}", playerInformation.Information.NewInformation.LastScore);
                node.getProperty("position").Value = string.Format("{0}", playerInformation.Information.NewInformation.Position);

                node.getProperty("month" + Utils.GetCurrentMonthOfPrevia(Model.PorraNode)).Value = string.Format("{0}", playerInformation.Information.NewInformation.MonthPuntuation);
                node.getProperty("porreroMonth" + Utils.GetCurrentMonthOfPrevia(Model.PorraNode)).Value = string.Format("{0}", playerInformation.Information.NewInformation.PorreroPuntuation);
                node.getProperty("drsMonth" + Utils.GetCurrentMonthOfPrevia(Model.PorraNode)).Value = string.Format("{0}", playerInformation.Information.NewInformation.DRSPuntuation);
                node.Publish(user);
            }
        }
    }
}
